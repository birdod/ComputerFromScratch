// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
    field Array sarray;
    field int len;
    constructor String new(int maxLength){
        let sarray = Array.new(maxLength);
        let len = 0;
        return sarray;
    }
    method void dispose(){
        do sarray.dispose()
        return;
    }
    method int length() {
        return len;
    }
    method char charAt(int j){
        return sarray[j];
    }
    method void setCharAt(int j, char c){
        let sarray[j] = c;
        return;
    }
    method String appendChar(char c){
        let sarray[len] = c;
        let len = len + 1;
        return;
    }
    method void eraseLastChar(){
        let len = len - 1;
        return;
    }
    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
        var int ret,i, now;
        var boolean flag;
        let i = 0;
        let flag = false;
        if (this.charAt(0)=45){
            let flag = true;
            let i = i + 1;
        }
        while(i < len){
            let now = this.charAt(i);
            if (~(now>47) or ~(now <58)){
                if (flag=true){
                    let ret = -ret;
                }
                return ret;
            }
            let ret = ret * 10 + (now-48);
            let i = i + 1;
        }
        if (flag=true){
            let ret = -ret;
        }
        return ret;
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
        let len = 0;
        if (val<0){
           do this.appendChar(45)
           do this.appendChar(48-val);
        }
        else{
            do this.appendChar(48 + val);
        }
        return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
