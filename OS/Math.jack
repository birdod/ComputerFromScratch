class Math {
    static Array twoToThe;

    function void init(){
        var int i;
        let i = 0;
        let twoToThe[0] = 1;
        while (i < 16){
            let i = i + 1;
            let twoToThe[i] = twoToThe[i-1] * 2;
        }
        return ;
    }
    function int bit(int x, int b){
        return (x & twoToThe[b]) > 0
    }
    function int abs(int x){
        if (x>=0){
            return x;
        }
        else {
            return -x;
        }
    }
    function int multiply(int x, int y){
        var int i, sum, shiftedX;
        let i = 0;
        let shiftedX = x;
        while (i < 16){
            if (bit(y,i)){
                let sum = sum + shiftedX
            }
            let i = i + 1;
            let shiftedX = shiftedX + shiftedX;
        }
        return sum;
    }

    function int divide(int x, int y){
        var int q, negx, negy, ret;
        let negx = x < 0;
        let negy = y < 0;
        if (x<0) {
            let x = abs(x);
        }
        if (y<0){
            let y = abs(y);
        }
        if (x<y) {
            return 0;
        }
        let q = divide(x, y + y);
        if (x - (q + q) * y < y){
            let ret = (q + q);
        }
        else { 
            let ret = (q + q) + 1;
        }
        if (negx = negy){
            return ret;
        }
        else{
            return -ret;
        }
    }

    function int min(int x, int y){
        if (x < y){
            return x;
        }
        else {
            return y;
        }
    }

    function int max(int x, int y){
        if (x<y){
            return y;
        }
        else{
            return x;
        }
    }

    function int sqrt(int x) {
        var int i, y, t;
        let i = 15;
        while (~(i = 0)){
            let t = (twoToThe[i] + y) * (twoToThe[i] + y);
            if (~(t> x) and (t>0)) {
                let y = y + twoToThe[i];
            }
            let i = i-1;
        }
        return y;
    }
}